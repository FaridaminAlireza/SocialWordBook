"""Rename the table names for consistency

Revision ID: 7cf8caee002a
Revises: 0ce5ddf25bc3
Create Date: 2024-12-26 15:31:11.310032

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "7cf8caee002a"
down_revision: Union[str, None] = "0ce5ddf25bc3"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users_groups",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("group_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["groups.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "word_contents_lists",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("word_content_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["word_content_id"], ["word_contents.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "word_contents_tags",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("word_content_id", sa.Integer(), nullable=False),
        sa.Column("tag_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["tag_id"],
            ["tags.id"],
        ),
        sa.ForeignKeyConstraint(
            ["word_content_id"],
            ["word_contents.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "word_contents_lists_items",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("item_data", sa.String(), nullable=False),
        sa.Column("item_type", sa.String(), nullable=False),
        sa.Column("word_content_list_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["word_content_list_id"],
            ["word_contents_lists.id"],
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_table("word_content_tag", if_exists=True)
    op.drop_table("user_group", if_exists=True)
    op.drop_table("list_items", if_exists=True)
    op.add_column("users", sa.Column("group_id", sa.Integer(), nullable=True))
    op.create_foreign_key(None, "users", "groups", ["group_id"], ["id"])
    op.add_column(
        "word_keys", sa.Column("group_id", sa.Integer(), nullable=False)
    )
    op.create_foreign_key(None, "word_keys", "groups", ["group_id"], ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "word_keys", type_="foreignkey")
    op.drop_column("word_keys", "group_id")
    op.drop_constraint(None, "users", type_="foreignkey")
    op.drop_column("users", "group_id")
    op.create_table(
        "list_items",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "item_data", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "item_type", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "word_content_list_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="list_items_pkey"),
    )
    op.create_table(
        "user_group",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "group_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["groups.id"],
            name="user_group_group_id_fkey",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name="user_group_user_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="user_group_pkey"),
    )
    op.create_table(
        "word_content_tag",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "word_content_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column("tag_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["tag_id"], ["tags.id"], name="word_content_tag_tag_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["word_content_id"],
            ["word_contents.id"],
            name="word_content_tag_word_content_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="word_content_tag_pkey"),
    )
    op.drop_table("word_contents_lists_items")
    op.drop_table("word_contents_tags")
    op.drop_table("word_contents_lists")
    op.drop_table("users_groups")
    # ### end Alembic commands ###
